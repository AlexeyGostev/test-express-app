<% layout('layout/page') -%>
<% block('title', 'Чат') -%>

<script src="./vendor/socket.io.js"></script>
<p>Тут чат</p>

<div id="room">
	<ul class="wrap-messages">
	</ul>
	<form method="POST">
		<input class="form-control" autocomplete="off" autofocus placeholder="Сообщение...">
	</form>
</div>

<script>
	var input = document.querySelector('#room .form-control');
	var ul = document.querySelector('.wrap-messages');
	var form = document.getElementById('room');

	var socket = io.connect('', {
		'reconnection delay': 1000,
		'max reconnection attempts': 30
	});

	socket
		.on('message', function(username, message) {
			printMessage(username + " > " + message);
		})
		.on('leave', function(username) {
			printStatus(username + ' вышел из чата');
		})
		.on('join', function(username) {
			printStatus(username + ' вошел в чат');
		})
		.on('connect', function() {
			printStatus("соеденение установлено");
			form.addEventListener('submit', sendMessage);
			input.disabled = false;
		})
		.on('disconnect', function() {
			printStatus("соеденение потеряно");
			form.removeEventListener('submit', sendMessage);
			input.disabled = true;
			this.$emit('error');
		})
		.on('logout', function() {
			window.location.href = "/";
		})
		.on('error', function(reason) {
			if (reason == 'handshake unauthorized') {
				printStatus("вы вышли из чата");
			} else {
				setTimeout(function() {
					socket.socket.connect();
				}, 1000);
			}
		});

	function sendMessage(e) {
		e.preventDefault();

		var text = input.value;
		socket.emit('message', text, function() {
			printMessage('я > ' + text);
		});

		input.value = '';
		return false;
	};

	function printStatus(status) {
		var li = document.createElement('li');
		li.className = 'status';
    	li.innerHTML = status;	
    	ul.appendChild(li);
	};

	function printMessage(text) {
		var li = document.createElement('li');
    	li.innerHTML = text;	
    	ul.appendChild(li);
	};

    /*form.addEventListener('submit', function(e){
    	e.preventDefault();
    	
    	console.log(input);
    	var text = input.value;
    	input.value = '';

    	socket.emit('message', text, function() {
    		var li = document.createElement('li');
    		li.innerHTML = text;
    		
    		ul.appendChild(li);
    	});

    	return false;
    });

    socket.on('message', function(text) {
    	var li = document.createElement('li');
    	li.innerHTML = text;
    	var ul = document.querySelector('.wrap-messages');
    	ul.appendChild(li);
    });*/
</script>